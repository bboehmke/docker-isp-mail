#!/bin/bash

usage() {
  echo "usage: ${0} -l | -a <user@domain.xx[:password] | -p <user@domain.xx:password> | -q <user@domain.xx:quota-in-bytes> | -d <user@domain.xx> | -D <user@domain.xx>"
}

if [ -x ${SCRIPT_DIR}/db_functions ]; then
  source ${SCRIPT_DIR}/db_functions
else
  echo "ERROR: Database Functions not found!"
  exit 255;
fi

# Generate Password
genpasswd() {
  if [[ -n ${1} ]]; then
    doveadm pw -s SHA512-CRYPT -p${1}
  else
    doveadm pw -s SHA512-CRYPT
  fi
}

# Analyse Commandline
RET=0
while getopts ":hla:p:q:d:D:" OPTION; do
  case ${OPTION} in
    l)
      list_users; RET=$?;
      ;;
    a)
      _MAIL_=$(echo ${OPTARG} | awk 'BEGIN{ FS=":"; }{ print $1; }');
      _PASSWD_=$(echo ${OPTARG} | awk 'BEGIN{ FS=":"; }{ print $2; }');
      _GENPASSWD_=$(genpasswd ${_PASSWD_});
      _QUOTA_=${QUOTA_STORAGE_DEFAULT}

      if [[ -n ${_MAIL_} && -n ${_GENPASSWD_} ]]; then
        log 2 "Mail: ${_MAIL_} / PassWD: ${_GENPASSWD_} / Default Quota: ${_QUOTA_}";
        user_add ${_MAIL_} ${_GENPASSWD_} ${_QUOTA_};
        RET=$?;
      else
        log 0 "Missing Parametes";
        usage;
      fi
      ;;
    p|q)
      _MAIL_=$(echo ${OPTARG} | awk 'BEGIN{ FS=":"; }{ print $1; }');
      _PARAM_=$(echo ${OPTARG} | awk 'BEGIN{ FS=":"; }{ print $2; }');

      if [[ -n ${_MAIL_} ]]; then
        case ${OPTION} in
          p)
            _GENPASSWD_=$(genpasswd ${_PASSWD_});
            log 2 "Mail: ${_MAIL_} / PassWD: ${_GENPASSWD_}";
            user_update_password ${_MAIL_} ${_GENPASSWD_};
            RET=$?;
            ;;
          q)
            _QUOTA_=${_PARAM_:-$QUOTA_STORAGE}
            log 2 "Mail: ${_MAIL_} / Quota: ${_QUOTA_}";
            user_update_quota ${_MAIL_} ${_QUOTA_};
            RET=$?;
            ;;
        esac
      else
        log 0 "Missing Parametes";
        usage:
      fi
      ;;
    d)
      user_delete ${OPTARG}; RET=$?;
      ;;
    D)
      _NAME_=$(echo ${OPTARG} | awk 'BEGIN{ FS="@"; }{ print $1; }');
      _DOMAIN_=$(echo ${OPTARG} | awk 'BEGIN{ FS="@"; }{ print $2; }');
      _MAILDIR_=${MAIL_DIR}/${_DOMAIN_}/${_NAME_};
      if [[ -n ${_NAME_} && -n ${_DOMAIN_} ]]; then
        if [ -d ${_MAILDIR_} ]; then
          log 2 "Remove Mailbox-Directory of user <${OPTARG}>";

          rm -rf ${_MAILDIR_};
          RET=$?;
        else
          log 0 "Mailbox-Directory <.../${_DOMAIN_}/${_NAME_}> doesn't exist!";
          exit 1;
        fi
      else
        log 0 "ERROR: Parameter missing";
        usage;
      fi
      ;;
    h)
      usage;
      exit 0;
      ;;
    :)
      log 0 "Missing Argument for option <${OPTION}>!";
      usage;
      exit 200;
      ;;
    \?)
      log 0 "Invalid Option <${OPTION}>";
      usage;
      exit 201;
      ;;
  esac
done

exit ${RET}

